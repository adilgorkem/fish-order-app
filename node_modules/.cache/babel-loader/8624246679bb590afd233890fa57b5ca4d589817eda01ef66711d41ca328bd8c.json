{"ast":null,"code":"var _jsxFileName = \"/Users/gorkemgedik/Desktop/AllSoftware/fish-order-app/src/components/Meals/MealItem/MealItemForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MealItemForm(props) {\n  _s();\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n  const submitHandler = e => {\n    e.preventDefault(); // the page reload is prevented.\n\n    const enteredAmount = amountInputRef.current.value; //This value is always a string so we should convert it to a number\n    const enteredAmountNumber = +enteredAmount;\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 6) {\n      setAmountIsValid(false);\n      return;\n    }\n    props.onAddToCart(enteredAmountNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount' + props.id,\n        type: 'number',\n        min: '1',\n        max: '6',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-6).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n_c = MealItemForm;\nvar _c;\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["React","useRef","useState","Input","classes","jsxDEV","_jsxDEV","MealItemForm","props","_s","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","e","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","className","form","onSubmit","children","ref","label","input","id","type","min","max","step","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gorkemgedik/Desktop/AllSoftware/fish-order-app/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport Input from '../../UI/Input'\n\nimport classes from './MealItemForm.module.css'\n\nexport default function MealItemForm(props) {\n\n    const [amountIsValid, setAmountIsValid] = useState(true);\n\n    const amountInputRef = useRef();\n\n    const submitHandler = (e) => {\n        e.preventDefault(); // the page reload is prevented.\n\n        const enteredAmount = amountInputRef.current.value; //This value is always a string so we should convert it to a number\n        const enteredAmountNumber = +enteredAmount;\n\n        if(enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 6) {\n            setAmountIsValid(false);\n            return;\n        }\n\n        props.onAddToCart(enteredAmountNumber);\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitHandler}>\n            <Input\n            ref={amountInputRef} \n            label=\"Amount\" input={{\n            id: 'amount' + props.id,\n            type: 'number',\n            min: '1',\n            max: '6',\n            step: '1',\n            defaultValue: '1'\n            }} />\n            <button>+ Add</button>\n            {!amountIsValid && <p>Please enter a valid amount (1-6).</p>}\n        </form>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAOC,OAAO,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAExC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMU,cAAc,GAAGX,MAAM,EAAE;EAE/B,MAAMY,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE,CAAC,CAAC;;IAEpB,MAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC;IACpD,MAAMC,mBAAmB,GAAG,CAACH,aAAa;IAE1C,IAAGA,aAAa,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IAAIF,mBAAmB,GAAG,CAAC,IAAIA,mBAAmB,GAAG,CAAC,EAAE;MACxFR,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACJ;IAEAH,KAAK,CAACc,WAAW,CAACH,mBAAmB,CAAC;EAC1C,CAAC;EAED,oBACIb,OAAA;IAAMiB,SAAS,EAAEnB,OAAO,CAACoB,IAAK;IAACC,QAAQ,EAAEZ,aAAc;IAAAa,QAAA,gBACnDpB,OAAA,CAACH,KAAK;MACNwB,GAAG,EAAEf,cAAe;MACpBgB,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAE;QACtBC,EAAE,EAAE,QAAQ,GAAGtB,KAAK,CAACsB,EAAE;QACvBC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,GAAG;QACRC,GAAG,EAAE,GAAG;QACRC,IAAI,EAAE,GAAG;QACTC,YAAY,EAAE;MACd;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACLjC,OAAA;MAAAoB,QAAA,EAAQ;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACrB,CAAC7B,aAAa,iBAAIJ,OAAA;MAAAoB,QAAA,EAAG;IAAkC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzD;AAEf;AAAC9B,EAAA,CApCuBF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}